apiVersion: apps/v1
kind: Deployment
metadata:
  name: flashcards-backend
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels: {{ app: flashcards-backend }}
  template:
    metadata:
      labels: {{ app: flashcards-backend }}
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "flashcards-role"
        vault.hashicorp.com/agent-inject-secret-app.env: "flashcards/backend"
        vault.hashicorp.com/agent-inject-template-app.env: |
          {{- with secret "flashcards/backend" -}}
          JWT_SECRET={{ '{{' }} .Data.data.JWT_SECRET {{ '}}' }}
          SPRING_DATASOURCE_URL={{ '{{' }} .Data.data.SPRING_DATASOURCE_URL {{ '}}' }}
          SPRING_DATASOURCE_USERNAME={{ '{{' }} .Data.data.SPRING_DATASOURCE_USERNAME {{ '}}' }}
          SPRING_DATASOURCE_PASSWORD={{ '{{' }} .Data.data.SPRING_DATASOURCE_PASSWORD {{ '}}' }}
          {{- end -}}
    spec:
      containers:
      - name: app
        image: ghcr.io/path-of-execution-team/flashcardsbackend:dev
        imagePullPolicy: IfNotPresent
        ports: [ {{name: http, containerPort: 8080}} ]
        env:
          - name: SPRING_CONFIG_IMPORT
            value: "optional:file:/vault/secrets/app.env"
          - name: KAFKA_BOOTSTRAP_SERVERS
            value: "kafka.kafka.svc.cluster.local:9092"
        resources:
          requests: {{ cpu: "200m", memory: "256Mi" }}
          limits:   {{ cpu: "1",    memory: "1Gi" }}
        readinessProbe: {{ httpGet: {{ path: /actuator/health/readiness, port: 8080 }}, initialDelaySeconds: 10, periodSeconds: 10 }}
        livenessProbe:  {{ httpGet: {{ path: /actuator/health/liveness,  port: 8080 }}, initialDelaySeconds: 20, periodSeconds: 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: flashcards-backend
  namespace: dev
spec:
  selector: {{ app: flashcards-backend }}
  ports:
    - name: http
      port: 8080
      targetPort: 8080