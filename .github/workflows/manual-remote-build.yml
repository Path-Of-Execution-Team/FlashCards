name: Manual Remote Build

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repo do zbudowania (owner/repo)'
        type: string
        required: true
      ref:
        description: 'Gałąź / tag w tym repo (np. Twoja gałąź PR)'
        type: string
        required: true
      image:
        description: 'Pełna nazwa obrazu (np. ghcr.io/Path-Of-Execution-Team/flashcardsgui)'
        type: string
        required: true
      platform:
        description: 'Platforma (Oracle A1 = linux/arm64)'
        type: string
        default: linux/arm64
      dockerfile:
        description: 'Ścieżka do Dockerfile'
        type: string
        default: ./Dockerfile
      context:
        description: 'Kontekst builda'
        type: string
        default: .
      mode:
        description: 'Publikacja: tar (artifact) lub ghcr (push)'
        type: choice
        options: [tar, ghcr]
        default: tar
      lang:
        description: 'node/java (opcjonalnie dla testów)'
        type: choice
        options: [none, node, java]
        default: none
      node_version:
        type: string
        default: "20"
      java_version:
        type: string
        default: "21"

permissions:
  contents: read
  packages: write   # potrzebne przy push do GHCR

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout TARGET repo at ref
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      # --- (opcjonalnie) testy ---
      - name: Setup Node
        if: inputs.lang == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: npm
      - name: Run Node tests
        if: inputs.lang == 'node'
        run: |
          npm ci
          npm test --if-present

      - name: Setup Java
        if: inputs.lang == 'java'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ inputs.java_version }}
          cache: maven
      - name: Run Maven tests
        if: inputs.lang == 'java'
        run: mvn -B -ntp test

      - name: Compute tag from TARGET repo HEAD
        id: meta
        run: |
          TAG="manual-$(git rev-parse --short=7 HEAD)"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "sha=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT

      # --- GHCR push ---
      - name: Login to GHCR
        if: inputs.mode == 'ghcr'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push (GHCR)
        if: inputs.mode == 'ghcr'
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platform }}
          push: true
          tags: |
            ${{ inputs.image }}:${{ steps.meta.outputs.tag }}
            ${{ inputs.image }}:ci-manual-latest

      # --- TAR artifact ---
      - name: Build to TAR
        if: inputs.mode == 'tar'
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platform }}
          tags: ${{ inputs.image }}:${{ steps.meta.outputs.tag }}
          outputs: type=tar,dest=image.tar

      - name: Upload image.tar
        if: inputs.mode == 'tar'
        uses: actions/upload-artifact@v4
        with:
          name: image-${{ steps.meta.outputs.tag }}
          path: image.tar
          retention-days: 3
