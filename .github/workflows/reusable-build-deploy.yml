name: reusable-build-deploy

on:
  workflow_call:
    inputs:
      lang: { type: string, required: true }                 # 'java' | 'node'
      image_name: { type: string, required: true }           # ghcr.io/org/name
      container_name: { type: string, required: true }       # backend | hosted | frontend
      deployment_dev: { type: string, required: true }
      deployment_prod: { type: string, required: true }
      namespace_dev: { type: string, default: "flashcards" }
      namespace_prod: { type: string, default: "flashcards" }
      build_context: { type: string, default: "." }
      dockerfile: { type: string, default: "Dockerfile" }
      test_command: { type: string, default: "" }
      node_version: { type: string, default: "20" }
      java_version: { type: string, default: "21" }
      deploy_mode: { type: string, default: "direct" }
      platform: { type: string, default: "linux/arm64" }
    secrets: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.container_name }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        if: inputs.lang == 'java'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ inputs.java_version }}
          cache: maven
      - name: Run tests (Java)
        if: inputs.lang == 'java'
        run: |
          cmd='mvn -B -ntp test'
          if [ -n "${{ inputs.test_command }}" ]; then cmd='${{ inputs.test_command }}'; fi
          eval "$cmd"

      - name: Setup Node
        if: inputs.lang == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: npm
      - name: Run tests (Node)
        if: inputs.lang == 'node'
        run: |
          cmd='npm ci && npm test --if-present'
          if [ -n "${{ inputs.test_command }}" ]; then cmd='${{ inputs.test_command }}'; fi
          eval "$cmd"

  build:
    needs: test
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
      tag: ${{ steps.meta.outputs.tag }}
      image_ref: ${{ steps.meta.outputs.image_ref }}
      tar_name: ${{ steps.pkg.outputs.tar_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Normalize image name (lowercase)
        id: norm
        run: echo "image_name_lc=$(echo '${{ inputs.image_name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short=7 $GITHUB_SHA)" >> $GITHUB_OUTPUT

      - name: Compute tag & image ref
        id: meta
        run: |
          if [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            TAG="dev-${{ steps.vars.outputs.sha_short }}"
          else
            TAG="sha-${{ steps.vars.outputs.sha_short }}"
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "image_ref=${{ steps.norm.outputs.image_name_lc }}:${TAG}" >> "$GITHUB_OUTPUT"

      # ----- REGISTRY MODE -----
      - name: Login to GHCR
        if: inputs.deploy_mode == 'registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: $
